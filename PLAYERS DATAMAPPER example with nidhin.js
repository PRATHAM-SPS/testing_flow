function playerDataMapper(data) { try { return utils.merge(data, { playerId: data.Person.Code, personName: { name: data.Person.Name, alias: data.Person.Alias, aliasRaw: data.Person.AliasRaw, passportName: data.Person.PassportName, passportSurname: data.Person.PassportSurname, }, teamId: data.Club.Code, teamName: data.Club.Name, birthDate: data.Person.BirthDate, jerseyNumber: data.Person.JerseyName, height: data.Person.Height, weight: data.Person.Weight, active: true, // Assuming active status is true for all players in this dataset positionName: null, // Position not provided in the input images: { action: null, // Placeholder for action image headshot: null // Placeholder for headshot image }, country: { code: null, // Placeholder for country code name: null // Placeholder for country name }, birthCountry: { code: null, // Placeholder for birth country code name: null // Placeholder for birth country name }, social: { twitter: null, facebook: null, instagram: null, website: null }, externalId: null, // Placeholder for external ID dfepBirthDate: null, // Placeholder for formatted birth date lastTeam: null, // Placeholder for last team startDate: null, // Placeholder for start date endDate: null, // Placeholder for end date jerseyName: data.Person.JerseyName, abbreviatedName: null, // Placeholder for abbreviated name dorsalRaw: null, // Placeholder for dorsal raw }); } catch (error) { app.jobs.logJob("playerDataMapper", "failed", { data: data, errorStack: error.stack || null, error: error || null }); } } module.exports = { playerDataMapper };